server:
  port: 9002
  servlet:
    context-path: /


spring:
#  datasource:
#    url: jdbc:mysql://182.61.49.227:3306/siso_java?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone = GMT
#    username: siso_java
#    password: 12345678
#    driver-class-name: com.mysql.cj.jdbc.Driver
  shardingsphere:
    datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      names: ds0,ds1
      ds0: #配置数据源
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://182.61.49.227:3306/siso_java_1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone = GMT
        username: root
        password: h102

      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://182.61.49.227:3306/siso_java?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone = GMT
        username: root
        password: h102

      druid: #配置druid缓存
        max-active: 100
        min-idle: 10
        max-wait: 6000
        filter:
          stat:
            merge-sql: true
            slow-sql-millis: 200
        test-on-borrow: true
        validation-query: SELECT 1
        use-global-data-source-stat: true
        filters: stat,wall,slf4j
        pool-prepared-statements: true
        max-pool-prepared-statement-per-connection-size: 40

#      config:
#        masterslave: # 配置读写分离
#          load-balance-algorithm-type: round_robin # 配置从库选择策略random（随机）round_robin（轮循）
#          name: db-write-read
#          master-data-source-name: ds0
#          slave-data-source-names: ds1

    sharding:
      default-database-strategy:
        inline: #通过id计算进入哪个库
           sharding-column: id
           algorithm-expression: ds$->{id % 2}

      tables:
        admin_user:
          actual-data-nodes: ds$->{0..1}.admin_user$->{0..2}
          table-strategy:  #分表字段
            inline:
              sharding-column: id
              algorithm-expression: admin_user$->{id % 3}
          key-generator:
            column: id
            type: SNOWFLAKE

        admin_feedback:
          actual-data-nodes: ds$->{0..1}.admin_feedback
        admin_permission:
          actual-data-nodes: ds$->{0..1}.admin_permission
        admin_user_permission:
          actual-data-nodes: ds$->{0..1}.admin_user_permission
        user_role:
          actual-data-nodes: ds$->{0..1}.user_role
        role_permission:
          actual-data-nodes: ds$->{0..1}.role_permission
        admin_role:
          actual-data-nodes: ds$->{0..1}.admin_role
        admin_equipment:
          actual-data-nodes: ds$->{0..1}.admin_equipment
        area:
          actual-data-nodes: ds$->{0..1}.area
        android_user:
          actual-data-nodes: ds$->{0..1}.android_user
        android_feedback:
          actual-data-nodes: ds$->{0..1}.android_feedback
        notice:
          actual-data-nodes: ds$->{0..1}.notice

    props:
      sql:
        show: true

  jpa:
    database: mysql
    show-sql: true
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    open-in-view: true
    database-platform: org.hibernate.dialect.MySQL57InnoDBDialect  #不加这句则默认为myisam引擎

  profiles:
    active: dev

  redis:
    host: 182.61.49.227
    #    host: r-uf6z45ljpjufw6myqspd.redis.rds.aliyuncs.com
    #   database: 2
    database: 2
    port: 6379
    timeout: 5000
    lettuce:
      pool:
        max-active: 600 #连接池最大连接数（使用负值表示没有限制）
        max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 300 #连接池中的最大空闲连接
        min-idle: 10 #连接池中的最小空闲连接
    password: h102

#logging:
#  level:
#    jdbc:
#      sqlonly: info
#      audit: off
#      resultset: off
#      connection: off
#      sqltiming: off
#  pattern:
#    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n'
#  file:
#    name: /developer/logs/flexibleEmployment-web/cms-api.log
